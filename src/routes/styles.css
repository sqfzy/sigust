/* --- CSS Variables (Theme) --- */
:root {
	--font-family-sans:
		system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell,
		'Open Sans', 'Helvetica Neue', sans-serif;
	--font-family-mono: 'Courier New', Courier, monospace;

	--color-primary: #007bff;
	--color-primary-dark: #0056b3;
	--color-secondary: #6c757d;
	--color-success: #28a745;
	--color-danger: #dc3545;
	--color-warning: #ffc107;
	--color-info: #17a2b8;
	--color-light: #f8f9fa;
	--color-dark: #343a40;
	--color-text: #212529;
	--color-text-muted: #6c757d;
	--color-border: #dee2e6;
	--color-background: #ffffff;
	--color-background-alt: #f8f9fa;
	--color-background-code: #e9ecef;

	--spacing-xs: 0.25rem;
	--spacing-sm: 0.5rem;
	--spacing-md: 1rem;
	--spacing-lg: 1.5rem;
	--spacing-xl: 2rem;

	--border-radius: 0.3rem;
	--box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);

	--font-size-sm: 0.875em;
	--font-size-md: 1em;
	--font-size-lg: 1.25em;
	--font-size-xl: 1.5em;
	--font-size-xxl: 2em;
}

/* --- Base Styles --- */
body {
	margin: 0;
	font-family: var(--font-family-sans);
	font-size: 16px;
	line-height: 1.6;
	color: var(--color-text);
	background-color: var(--color-background-alt); /* Light gray background */
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

h1,
h2,
h3,
h4,
h5,
h6 {
	margin-top: 0;
	margin-bottom: var(--spacing-md);
	font-weight: 600;
	line-height: 1.2;
}

h1 {
	font-size: var(--font-size-xxl);
}
h2 {
	font-size: var(--font-size-xl);
}
h3 {
	font-size: var(--font-size-lg);
}

p {
	margin-top: 0;
	margin-bottom: var(--spacing-md);
}

a {
	color: var(--color-primary);
	text-decoration: none;
}
a:hover {
	color: var(--color-primary-dark);
	text-decoration: underline;
}

pre {
	font-family: var(--font-family-mono);
	background-color: var(--color-background-code);
	padding: var(--spacing-md);
	border: 1px solid var(--color-border);
	border-radius: var(--border-radius);
	white-space: pre-wrap;
	word-break: break-all;
	max-height: 300px;
	overflow-y: auto;
	font-size: var(--font-size-sm);
}

small {
	font-size: var(--font-size-sm);
	color: var(--color-text-muted);
}

/* --- Utility Classes & Base Element Styles --- */

/* Buttons */
.button,
button,
a[role='button'] {
	display: inline-block;
	font-weight: 400;
	color: var(--color-text);
	text-align: center;
	vertical-align: middle;
	cursor: pointer;
	user-select: none;
	background-color: var(--color-light);
	border: 1px solid var(--color-border);
	padding: var(--spacing-sm) var(--spacing-md);
	font-size: var(--font-size-md);
	line-height: 1.5;
	border-radius: var(--border-radius);
	transition:
		color 0.15s ease-in-out,
		background-color 0.15s ease-in-out,
		border-color 0.15s ease-in-out,
		box-shadow 0.15s ease-in-out;
	text-decoration: none; /* Ensure links styled as buttons don't have underline */
	margin-right: var(--spacing-sm); /* Default spacing */
	margin-bottom: var(--spacing-sm); /* Default spacing */
}
.button:last-child,
button:last-child,
a[role='button']:last-child {
	margin-right: 0; /* Remove margin from last button in a group */
}

.button:hover,
button:hover,
a[role='button']:hover {
	color: var(--color-text);
	background-color: #e2e6ea;
	border-color: #dae0e5;
	text-decoration: none;
}

.button:focus,
button:focus,
a[role='button']:focus {
	outline: 0;
	box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25); /* Example focus ring */
}

.button:disabled,
button:disabled,
a[role='button'][aria-disabled='true'] {
	opacity: 0.65;
	cursor: not-allowed;
	pointer-events: none; /* Ensure clicks don't register */
}

/* Button Variants */
.button-primary,
button.primary {
	color: #fff;
	background-color: var(--color-primary);
	border-color: var(--color-primary);
}
.button-primary:hover,
button.primary:hover {
	color: #fff;
	background-color: var(--color-primary-dark);
	border-color: #0050a7;
}

.button-success,
button.success {
	color: #fff;
	background-color: var(--color-success);
	border-color: var(--color-success);
}
.button-success:hover,
button.success:hover {
	color: #fff;
	background-color: #1e7e34;
	border-color: #1c7430;
}

.button-danger,
button.danger {
	color: #fff;
	background-color: var(--color-danger);
	border-color: var(--color-danger);
}
.button-danger:hover,
button.danger:hover {
	color: #fff;
	background-color: #bd2130;
	border-color: #b21f2d;
}

.button-info,
button.info {
	color: #fff;
	background-color: var(--color-info);
	border-color: var(--color-info);
}
.button-info:hover,
button.info:hover {
	color: #fff;
	background-color: #117a8b;
	border-color: #10707f;
}

.button-link,
button.link-button {
	/* For buttons that look like links */
	font-weight: 400;
	color: var(--color-primary);
	text-decoration: none;
	background-color: transparent;
	border: none;
	padding: 0;
	margin: 0; /* Reset margins */
	vertical-align: baseline;
}
.button-link:hover,
button.link-button:hover {
	color: var(--color-primary-dark);
	text-decoration: underline;
	background-color: transparent; /* Ensure no background on hover */
	border: none;
}

/* Forms */
.form-group {
	margin-bottom: var(--spacing-md);
}

.form-label,
label {
	display: inline-block;
	margin-bottom: var(--spacing-sm);
	font-weight: 600;
}

.form-control,
input[type='text'],
input[type='password'],
input[type='email'],
select,
textarea {
	display: block;
	width: 100%;
	padding: var(--spacing-sm) var(--spacing-md);
	font-size: var(--font-size-md);
	font-weight: 400;
	line-height: 1.5;
	color: var(--color-text);
	background-color: var(--color-background);
	background-clip: padding-box;
	border: 1px solid var(--color-border);
	border-radius: var(--border-radius);
	transition:
		border-color 0.15s ease-in-out,
		box-shadow 0.15s ease-in-out;
	box-sizing: border-box; /* Include padding and border in element's total width/height */
}
.form-control:focus,
input[type='text']:focus,
input[type='password']:focus,
input[type='email']:focus,
select:focus,
textarea:focus {
	color: var(--color-text);
	background-color: var(--color-background);
	border-color: #80bdff; /* Example focus color */
	outline: 0;
	box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
}
.form-control:disabled,
input:disabled,
select:disabled,
textarea:disabled {
	background-color: var(--color-background-alt);
	opacity: 0.7;
}

select.form-control:not([size]):not([multiple]) {
	height: calc(1.5em + var(--spacing-sm) * 2 + 2px); /* Calculate height based on padding/border */
}

textarea.form-control {
	min-height: calc(1.5em + var(--spacing-sm) * 2 + 2px);
	resize: vertical;
}

.form-text,
small {
	display: block;
	margin-top: var(--spacing-xs);
	font-size: var(--font-size-sm);
	color: var(--color-text-muted);
}

/* Alerts / Feedback Messages */
.alert {
	position: relative;
	padding: var(--spacing-md);
	margin-bottom: var(--spacing-md);
	border: 1px solid transparent;
	border-radius: var(--border-radius);
}

.alert-success,
.success {
	color: #155724;
	background-color: #d4edda;
	border-color: #c3e6cb;
}

.alert-danger,
.error {
	color: #721c24;
	background-color: #f8d7da;
	border-color: #f5c6cb;
}

.alert-info,
.info {
	color: #0c5460;
	background-color: #d1ecf1;
	border-color: #bee5eb;
}

/* File path display */
.filepath {
	display: inline-block; /* Allow margin */
	margin-left: var(--spacing-md);
	font-style: italic;
	color: var(--color-text-muted);
	word-break: break-all; /* Wrap long paths */
	background-color: var(--color-background-alt);
	padding: var(--spacing-xs) var(--spacing-sm);
	border-radius: var(--border-radius);
	border: 1px dashed var(--color-border);
	font-size: var(--font-size-sm);
}

/* --- Icon Specific Helpers --- */

/* Base icon alignment within buttons/text */
.icon {
	margin-right: var(--spacing-sm); /* Adjusted spacing */
	vertical-align: middle; /* Or use flex align-items on parent */
	display: inline-block;
	line-height: 1;
}

/* Global Spinner Animation */
@keyframes lucide-spin {
	from {
		transform: rotate(0deg);
	}
	to {
		transform: rotate(360deg);
	}
}
/* Target any SVG with spin="true" attribute */
/* Note: Using :global() might not be strictly necessary if this is in the global styles.css */
/* but it ensures targeting if nested. Simpler rule without :global() might also work */
svg[spin='true'] {
	animation: lucide-spin 1s linear infinite;
}

/* Optional: Colors for Alert Icons */
.icon-success {
	color: var(--color-success); /* Use success color variable */
}

.icon-danger {
	color: var(--color-danger); /* Use danger color variable */
}
